{% set setting = (attribute(_context, settingName) is defined ? attribute(_context, settingName) : "") %}

<div class="form-group form-group-default input-group">
    <label for="{{ settingName }}_location">Search Address</label>
    <input id="{{ settingName }}_location" type="text" class="form-control" />
    <span class="input-group-addon" style="cursor: pointer;"><span class="fa fa-search"></span></span>
</div>

<div id="map_canvas" style="width: 100%; height: 400px;"></div>
<input type="hidden" id="{{ settingName }}_latitude" name="{{ settingName }}[latitude]" value="{{ setting.value|modelTranslator('latitude') }}"/>
<input type="hidden" id="{{ settingName }}_longitude" name="{{ settingName }}[longitude]" value="{{ setting.value|modelTranslator('longitude') }}"/>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB1hd5aevxAXr8m3MOWYb2KpeAsQHMwccs"></script>
<script type="text/javascript">
    var map = null;
    var markerArray = []; //create a global array to store markers

    {% set latitude = 0 %}
    {% if setting.value|modelTranslator('latitude') is not empty %}
        {% set latitude = setting.value|modelTranslator('latitude') %}
    {% endif %}

    {% set longitude = 0 %}
    {% if setting.value|modelTranslator('longitude') is not empty %}
        {% set longitude = setting.value|modelTranslator('longitude') %}
    {% endif %}

    function initialize() {
        var myOptions = {
            zoom: 15,
            center: new google.maps.LatLng({{ latitude }}, {{ longitude }}),
            mapTypeControl: false,
            mapTypeControlOptions: {
                style: google.maps.MapTypeControlStyle.DROPDOWN_MENU
            },
            navigationControl: false,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        }
        map = new google.maps.Map(document.getElementById("map_canvas"), myOptions);

        google.maps.event.addListener(map, 'click', function(event) {
            createMarker(new google.maps.LatLng(event.latLng.lat(), event.latLng.lng()), event.latLng.lat() + ', ' + event.latLng.lng());
        });
        createMarker(new google.maps.LatLng({{ latitude }}, {{ longitude }}));
    }

    function createMarker(latlng, myTitle) {
        var marker = new google.maps.Marker({
            position: latlng,
            map: map,
            title: "{{ 'websiteName'|trans }}",
            zIndex: Math.round(latlng.lat() * -100000) << 5
        });

        for(var i=0; i<markerArray.length; i++){
            markerArray[i].setMap(null);
        }
        markerArray.push(marker); //push local var marker into global array

        $('#{{ settingName }}_latitude').val( latlng.lat() );
        $('#{{ settingName }}_longitude').val( latlng.lng() );
    }

    window.onload = initialize;

    $('#{{ settingName }}_location').change(function(){
        $.ajax({
            url : 'http://maps.googleapis.com/maps/api/geocode/json?',
            type: 'GET',
            data: {
                address: $(this).val(),
                sensor: false
            },
            success : function(response){
                if(response.results.length > 0){
                    var location = new google.maps.LatLng(response.results[0].geometry.location.lat, response.results[0].geometry.location.lng);
                    createMarker(location, response.results[0].geometry.location.lat + ', ' + response.results[0].geometry.location.lng);
                    map.setCenter(location);
                }
            },
            error: function(){

            }
        });
    });
</script>